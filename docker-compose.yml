version: '3.7'

services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - microservices-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user_db:5432/bank_user
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8081:8081"
    restart: unless-stopped
    depends_on:
      - user_db
    networks:
      - microservices-network

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8082:8082"
    restart: unless-stopped
    networks:
      - microservices-network

  account-service:
    build:
      context: ./account-service
      dockerfile: Dockerfile
    container_name: account-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://account_db:5432/bank_account
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8083:8083"
    restart: unless-stopped
    depends_on:
      - account_db
    networks:
      - microservices-network

  transaction-service:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
    container_name: transaction-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://transaction_db:5432/bank_transaction
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8084:8084"
    restart: unless-stopped
    depends_on:
      - transaction_db
    networks:
      - microservices-network

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8085:8085"
    restart: unless-stopped
    networks:
      - microservices-network

  user_db:
    image: postgres:latest
    container_name: user_db
    environment:
      POSTGRES_DB: bank_user
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - microservices-network
    volumes:
      - user_db_data:/var/lib/postgresql/data

  account_db:
    image: postgres:latest
    container_name: account_db
    environment:
      POSTGRES_DB: bank_account
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    networks:
      - microservices-network
    volumes:
      - account_db_data:/var/lib/postgresql/data

  transaction_db:
    image: postgres:latest
    container_name: transaction_db
    environment:
      POSTGRES_DB: bank_transaction
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    networks:
      - microservices-network
    volumes:
      - transaction_db_data:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - microservices-network

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  user_db_data:
  account_db_data:
  transaction_db_data:
